plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.9.25'
    id 'org.jooq.jooq-codegen-gradle' version '3.19.15'
    id 'org.jetbrains.kotlin.plugin.spring' version '1.9.25'
    id 'org.springframework.boot' version '3.4.0'
    id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.musashi'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(20)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
    implementation 'org.jetbrains.kotlin:kotlin-reflect'
    implementation 'io.github.oshai:kotlin-logging-jvm:7.0.0'
    implementation 'org.jooq:jooq:3.19.15'
    implementation 'org.jooq:jooq-meta:3.19.15'
    implementation 'org.jooq:jooq-codegen:3.19.15'
    implementation "org.jooq:jooq-postgres-extensions:3.19.15"
    implementation 'javax.validation:validation-api:2.0.1.Final'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.1'
    jooqCodegen 'org.postgresql:postgresql:42.7.3'
    implementation 'org.postgresql:postgresql:42.7.3'
    implementation "org.springframework.boot:spring-boot-starter-jooq"
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    compileOnly 'org.projectlombok:lombok:1.18.34'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.jetbrains.kotlin:kotlin-test-junit5'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testImplementation "org.mockito:mockito-core:4.5.1"
    testImplementation "org.mockito:mockito-junit-jupiter:4.5.1"
    testImplementation "org.mockito.kotlin:mockito-kotlin:4.0.0"
    testImplementation"org.jetbrains.kotlin:kotlin-test-junit5"
    implementation 'org.slf4j:slf4j-api:2.0.16'
    implementation 'org.flywaydb:flyway-database-postgresql:11.3.1'

}

kotlin {
    compilerOptions {
        freeCompilerArgs.addAll '-Xjsr305=strict'
    }
}

tasks.bootJar {
    archiveBaseName.set("library-Kotlin")
    archiveVersion.set(project.version.toString())
}
//tasks.named('test') {
tasks.test {
    useJUnitPlatform()
}

// set with jooq configuration setting
sourceSets.main {
    java.srcDirs 'build/generated/sources/jooq/main'
    kotlin.srcDirs 'src/main/kotlin'
}

jooq {
    version = '3.19.15'
    configuration {
        jdbc {
            // this is just for jooq use, config in application.yml is for spring use.
            driver = 'org.postgresql.Driver'
            url = 'jdbc:postgresql://localhost:5432/library_jooq'
            user = 'postgres'
            password = 'postgres'
        }
        generator {
            //
            name = 'org.jooq.codegen.DefaultGenerator'
            database {
                name = 'org.jooq.meta.postgres.PostgresDatabase'
                inputSchema = 'public'
                includes = '.*'
                excludes = "flyway_schema_history"
            }
            target {
                packageName = 'com.musashi.jooq.generated'
                directory = "build/generated/sources/jooq/main"
            }
        }
    }

}

